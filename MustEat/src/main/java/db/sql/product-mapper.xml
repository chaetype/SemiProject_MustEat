<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>

	<!-- 은영 (배송현황 관련) -->
	<entry key="deliveryStatusList">
		<!-- 배송 현황에 따른 주문상품들 조회시 실행할 sql문 -->
		SELECT 
		       MEM_ID
		     , ORDER_NO
		     , PRODUCT_NAME
		     , ORDER_QUENTITY
		     , ORDER_DATE
		     , TOTAL_PRICE
		     , DELIVERY_STATUS
		     , SELLER
		     , SELLER_PHONE
		FROM ORDER_PRO
		JOIN MEMBER USING (MEM_NO)
		JOIN ORDER_LIST USING (ORDER_NO)
		JOIN PRODUCT USING (PRODUCT_CODE)
		WHERE DELIVERY_STATUS = ? <!-- 배송 현황 -->
		  AND MEM_ID = ? <!-- 주문자 아이디 -->
	</entry>
	
	<!-- 은영(배송에 따른 주문 수량를 한꺼번에 실행할 코드 -->
	<entry key="countOrder">
        SELECT 
            M.MEM_ID,
            (SELECT COUNT(*) 
            	FROM BASKET B 
             	WHERE M.MEM_NO = B.MEM_NO) AS BASKET, <!-- 장바구니 -->
            (SELECT COUNT(*) 
            	FROM ORDER_PRO O 
            		WHERE M.MEM_NO = O.MEM_NO ) AS CONFIRM, <!-- 구매확정 -->
            (SELECT COUNT(*) 
            	FROM ORDER_PRO O 
            		WHERE M.MEM_NO = O.MEM_NO 
            		AND ORDER_STATUS = 2) AS CANCEL, <!-- 구매취소 -->
            (SELECT COUNT(*) 
            	FROM ORDER_PRO O 
            		WHERE M.MEM_NO = O.MEM_NO 
            		AND DELIVERY_STATUS = '상품준비중'
            		AND ORDER_STATUS != 2) AS READY, <!-- 상품준비중 -->
            (SELECT COUNT(*) 
            	FROM ORDER_PRO O 
            		WHERE M.MEM_NO = O.MEM_NO 
            		AND DELIVERY_STATUS = '배송중') AS TRANSIT, <!-- 배송중 -->
            (SELECT COUNT(*) 
            	FROM ORDER_PRO O 
            		WHERE M.MEM_NO = O.MEM_NO 
            		AND DELIVERY_STATUS = '배송완료') AS DELIVERED <!-- 배송완료 -->
            FROM MEMBER M 
        WHERE MEM_ID = ? <!-- 로그인한 회원 아이디 -->
	</entry>
	
	<!-- 은영 (마이페이지에서 밀키트 리뷰 중 최신게시글 2개 조회) -->
	<entry key="selectNewProductReview">
	  SELECT ROWNUM, A.*
		    FROM (
		            SELECT MEM_ID
		                 , PRODUCT_NAME
		                 , SCRAP_COUNT
		                 , PR_REVIEW_ENROLLDATE "REVIEW_ENROLLDATE"
		             FROM PRODUCT_REVIEW
		             JOIN MEMBER ON (MEM_NO = REVIEW_WRITER)
		             JOIN PRODUCT USING (PRODUCT_CODE)
		             WHERE MEM_ID = ? <!-- 로그인한 회원 아이디 -->
		             ORDER BY PR_REVIEW_ENROLLDATE DESC
		             ) A
      WHERE ROWNUM BETWEEN 1 AND 2
	</entry>
	
	<!-- 은영 (마이페이지에서 주문상세 내역 중 최신 2개 조회) -->
	<entry key="selectNewOrder">
		SELECT ROWNUM, A.* 
		    FROM (
		        SELECT PRODUCT_NAME
		             , TOTAL_PRICE
		             , ORDER_DATE
		             , DELIVERY_STATUS
		             , ORDER_STATUS
		        FROM ORDER_PRO
		        JOIN MEMBER USING (MEM_NO)
		        JOIN ORDER_LIST USING (ORDER_NO)
		        JOIN PRODUCT USING (PRODUCT_CODE)
		        WHERE MEM_ID = ? <!-- 로그인한 회원 아이디 -->
		          AND ORDER_STATUS = 1
		        ORDER BY ORDER_DATE DESC
		         ) A
		WHERE ROWNUM BETWEEN 1 AND 2
	</entry>
	
	<!-- 성범 (밀키트 목록상품 조회) -->
	<entry key="selectList">
		SELECT
			   PRODUCT_CODE 
		     , PRODUCT_NAME
		     , PRICE
		     , IMG_PATH
		  FROM PRODUCT
	</entry>
	
	
	<!-- 성범 (배송지입력에서 주문자 정보사항 insert -->
	<entry key="insertAp">
		INSERT
		  INTO DELIVERY
		  (
		    DEL_NAME
		  , DEL_PHONE
		  , DEL_EMAIL
		  , DEL_ADDRESS
		  , DEL_REQUEST
		  )
		  VALUES
		  (
		    ?
		  , ?
		  , ?
		  , ?
		  , ?
		  )
		  
	</entry>
	
	<!-- 은영 (장바구니 담은 '월'만 조회) -->
	<entry key="selectMonth">
		SELECT 
		   TO_CHAR(BASKET_DATE, 'YYYY.MM') "MONTH" 
		FROM BASKET
		JOIN MEMBER USING (MEM_NO)
		WHERE MEM_ID = ? <!-- 로그인한 회원 아이디 -->
		GROUP BY TO_CHAR(BASKET_DATE, 'YYYY.MM')
	</entry>
	
	<!-- 은영 (장바구니 목록 조회) -->
	<entry key="selectBasketList">
		SELECT 
		     MEM_ID
		   , PRODUCT_NAME
		   , TO_CHAR(BASKET_DATE, 'YYYY.MM') "MONTH" 
		   , BASKET_DATE
		   , AMOUNT
		   , PRICE * AMOUNT "PRICE"
		   , SELLER
		   , SELLER_PHONE
		FROM BASKET
		JOIN MEMBER USING (MEM_NO)
		JOIN PRODUCT USING (PRODUCT_CODE)
		WHERE MEM_ID = ? <!-- 로그인한 회원 아이디 -->
	</entry>
	
	<!-- 은영 (상품 주문한 '월'만 조회) -->
	<entry key="selectOrderMonth">
		SELECT 
		   TO_CHAR(ORDER_DATE, 'YYYY.MM') "MONTH" 
		FROM ORDER_PRO
		JOIN MEMBER USING (MEM_NO)
		WHERE MEM_ID = ? <!-- 로그인한 회원 아이디 -->
		  AND DELIVERY_STATUS = ? <!-- 배송현황 -->
		GROUP BY TO_CHAR(ORDER_DATE, 'YYYY.MM')
		ORDER BY MONTH ASC
	</entry>
	
	<!-- 은영 (배송현황에 따른 주문목록 조회) -->
	<entry key="selectOrderList">
		SELECT 
			OP.ORDER_NO "ORDER_NO"
		  , TO_CHAR(ORDER_DATE, 'YYYY.MM') "MONTH"
		  , ORDER_DATE
		  , ORDER_QUENTITY
		  , ORDER_STATUS
		  , PRODUCT_NAME
		  , TOTAL_PRICE + DELIVERY_PRICE "TOTAL_PRICE"
		  , SELLER
		  , SELLER_PHONE
		FROM ORDER_PRO OP
		JOIN MEMBER USING (MEM_NO)
		JOIN ORDER_LIST OL ON (OP.ORDER_NO = OL.ORDER_NO)
		JOIN PRODUCT P ON (OL.PRODUCT_CODE = P.PRODUCT_CODE)
		WHERE MEM_ID =  ? <!-- 로그인한 회원 아이디 -->
		  AND DELIVERY_STATUS = ? <!-- 배송현황 -->
		ORDER BY ORDER_DATE ASC
	</entry>

	<!-- 성범 (밀키트 상세페이지에 들어갈 데이터 조회) -->
	<entry key="detailProduct">
		SELECT
			   PRODUCT_CODE
		     , PRODUCT_NAME
		     , PRICE
		     , SALES_UNIT
		     , CAPACITY
		     , PACKING
		     , ALLERGY
		     , EXPIRATION_DATE
		     , IMG_PATH
		  FROM PRODUCT
		WHERE PRODUCT_CODE = ?
	</entry>
	
	<!-- 은영 (구매보류 => 구매확정으로 변경) -->
	<entry key="updatePurchaseConfirm">
		UPDATE ORDER_PRO
	    	SET ORDER_STATUS = 1 <!-- 구매확정 -->
	    WHERE ORDER_NO = ? <!-- 구매번호 -->
	</entry>
	
	<!-- 은영 (구매보류 => 구매취소로 변경) -->
	<entry key="updatePurchaseCancel">
		UPDATE ORDER_PRO
	    	SET ORDER_STATUS = 2 <!-- 구매확정 -->
	    	  , DELIVERY_STATUS = '구매취소' <!-- 배송현황 -->
	    WHERE ORDER_NO = ? <!-- 구매번호 -->
	</entry>

	
	
	
	
	
</properties>